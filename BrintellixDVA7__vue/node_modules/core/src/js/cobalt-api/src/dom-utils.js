import rivets from 'rivets';

export function getComponentElement(component, id, modelKeypath){
	if(component instanceof Element || component instanceof DocumentFragment){
		return component;
	}

	return buildComponentDOMElement(component, id, modelKeypath);
}

export function buildComponentDOMElement(component, id, modelKeypath){
	const element = document.createElement(component);
	element.setAttribute('model', modelKeypath);
	element.setAttribute('id', id);
	element.classList.add('default');

	return element;
}

export function addBinderAttribute(element, type, keypath){
	element.setAttribute(`${rivets.prefix}-${type}`, keypath);
}

export function getBinderKeypath(element, type){
	return element.getAttribute(`${rivets.prefix}-${type}`);
}

export function getNestedBinderKeypaths(element){
	const allElements = [].slice.call(element.querySelectorAll('*')),
		keyPaths = [];
	
	allElements.push(element);
	
	allElements.forEach(element => {
		if(typeof element.binders == 'object'){
			Object.keys(element.binders).forEach(binderType => {
				keyPaths.push(getBinderKeypath(element, binderType));
			})
		}
	});
	
	return keyPaths;
}

export function removeBinderAttribute(element, type){
	element.removeAttribute(`${rivets.prefix}-${type}`);
}

export function appendComponent(element, rootElement){
	getRootDOMElement(rootElement).appendChild(element);
}

export function removeDOMElement(element){
	element.parentNode.removeChild(element);
}

export function hideDOMElement(element){
	element.style.display = 'none';
}

export function getNestedComponents(element){
	const nestedComponents = [].slice.call(element.querySelectorAll('[co-component]'));
	return [element, ...nestedComponents];
}

export function getComponentModelType(element){
	return isCommonModel(getModelKeypath(element));
}

export function getModelKeypath(element){
	return element.getAttribute('model') || '';
}

export function isLastIndex(index, array){
	return index === array.length - 1;
}

function getRootDOMElement(rootElement){
	return rootElement ? rootElement : document.querySelector('.slide');
}

function isCommonModel(keypath){
	return keypath.startsWith('m.common');
}