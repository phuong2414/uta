'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _DOMObserver = require('./DOMObserver.js');

var _DOMObserver2 = _interopRequireDefault(_DOMObserver);

var _utils = require('utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var slideElement = document.querySelector('.slide');
var defaultConfig = {
	subtree: true,
	childList: true
};

exports.default = {
	subscribe: function subscribe(callback) {
		var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : slideElement;
		var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultConfig;

		return _DOMObserver2.default.subscribe(mutationsHandler(callback), target, config);
	}
};


function mutationsHandler(callback) {
	return function (mutations) {
		return mutations.filter(componentNodeAddedOrRemoved).map(function (mutation) {
			return mutation.target;
		}).map(getRootComponent).filter(_utils.isUnique).forEach(callback);
	};
}

function getRootComponent(element) {
	if (isComponent(element)) {
		return element;
	}

	return element.parentNode ? getRootComponent(element.parentNode) : null;
}

function isComponent(element) {
	return element instanceof Element && element.hasAttribute('co-component');
}

function componentNodeAddedOrRemoved(mutationRecord) {
	var added = (0, _utils.toArray)(mutationRecord.addedNodes);
	var removed = (0, _utils.toArray)(mutationRecord.removedNodes);

	return mutationRecord.type == 'childList' && added.some(isComponent) || removed.some(isComponent);
}