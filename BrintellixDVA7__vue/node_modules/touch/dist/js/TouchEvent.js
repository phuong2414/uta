Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.TouchEvent = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Event2 = require('./Event');

var _utils = require('utils');

var _mobileTabletCheck = require('./mobile-tablet-check');

var _mobileTabletCheck2 = _interopRequireDefault(_mobileTabletCheck);

var _passiveOptionCheck = require('./passive-option-check');

var _passiveOptionCheck2 = _interopRequireDefault(_passiveOptionCheck);

var _settings = require('settings');

var _settings2 = _interopRequireDefault(_settings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isTouch = (window.hasOwnProperty('ontouchstart') || 'ontouchstart' in window) && _mobileTabletCheck2.default;

var TouchEvent = exports.TouchEvent = function (_Event) {
	_inherits(TouchEvent, _Event);

	function TouchEvent() {
		_classCallCheck(this, TouchEvent);

		var _this = _possibleConstructorReturn(this, (TouchEvent.__proto__ || Object.getPrototypeOf(TouchEvent)).apply(this, arguments));

		_this.isTouch = isTouch;
		_this.numOfTouches = 0;
		return _this;
	}

	_createClass(TouchEvent, [{
		key: 'init',
		value: function init(root) {
			var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { preserveDefaultMovementBehavior: false };

			_get(TouchEvent.prototype.__proto__ || Object.getPrototypeOf(TouchEvent.prototype), 'init', this).call(this, root, options);

			root.addEventListener('touchmove', function (event) {
				if (!options.preserveDefaultMovementBehavior && !~["VIDEO", "TEXTAREA"].indexOf(event.target.tagName)) {
					event.preventDefault();
				}
			}, _passiveOptionCheck2.default ? { passive: false } : false);
		}
	}, {
		key: 'setStartPosition',
		value: function setStartPosition(event) {
			_get(TouchEvent.prototype.__proto__ || Object.getPrototypeOf(TouchEvent.prototype), 'setStartPosition', this).call(this, event);
			this.duration = 0;
		}
	}, {
		key: 'startHandler',
		value: function startHandler(event) {
			var _this2 = this;

			var touchTarget = event.target;
			this.numOfTouches = 0;
			event = this.getOriginalEvent(event);
			_get(TouchEvent.prototype.__proto__ || Object.getPrototypeOf(TouchEvent.prototype), 'startHandler', this).call(this, event);
			if (!this.target) {
				this.target = touchTarget; //fix iOs10
			}

			this.timer = setInterval(function () {
				//TODO
				_this2.duration++;
				if (_this2.numOfTouches === 2 && _this2.duration > 500) {
					_this2.dispatchEvent(_this2.target, 'doublehold');
					clearInterval(_this2.timer);
				}
			}, 1);
		}
	}, {
		key: 'moveHandler',
		value: function moveHandler(event) {
			this.event = event;
			this.setNumTouhces(event);
			event = this.getOriginalEvent(event);
			_get(TouchEvent.prototype.__proto__ || Object.getPrototypeOf(TouchEvent.prototype), 'moveHandler', this).call(this, event);
		}
	}, {
		key: 'endHandler',
		value: function endHandler(event) {
			_get(TouchEvent.prototype.__proto__ || Object.getPrototypeOf(TouchEvent.prototype), 'endHandler', this).call(this, event);
			clearInterval(this.timer);
		}
	}, {
		key: 'setNumTouhces',
		value: function setNumTouhces(event) {
			var length = event.touches.length;
			if (this.numOfTouches < length) {
				this.numOfTouches = length;
			}
		}
	}, {
		key: 'getOriginalEvent',
		value: function getOriginalEvent(event) {
			return event.touches[0] || event.changedTouches[0];
		}
	}, {
		key: 'events',
		get: function get() {
			return {
				start: 'touchstart',
				move: 'touchmove',
				end: 'touchend'
			};
		}
	}, {
		key: 'options',
		get: function get() {
			return (0, _utils.mixin)(_get(TouchEvent.prototype.__proto__ || Object.getPrototypeOf(TouchEvent.prototype), 'options', this), {
				touchesCount: this.numOfTouches,
				touchEvents: this.event.touches ? (0, _utils.toArray)(this.event.touches) : []
			});
		}
	}], [{
		key: 'isTouch',
		get: function get() {
			return isTouch;
		}
	}]);

	return TouchEvent;
}(_Event2.Event);