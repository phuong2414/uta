const gulp = require('gulp');
const del = require('del');
const plumber = require('gulp-plumber');
const watch = require('gulp-watch');
const sourcemaps = require('gulp-sourcemaps');
const autoprefixer = require('autoprefixer');
const babel = require('gulp-babel');

gulp.task('build', ['build-js']);

gulp.task('watch', ['clean-js'], () => {
  const watcher = function (name, parameters, tasks) {
    watch(parameters, { name, ignoreInitial: true, verbose: true }, () => {
      gulp.start(tasks);
    });
  };

  watcher('Watch-js', ['./src/**/*.js'], ['build-js']);
});


gulp.task('build-js', ['clean-js'], () => gulp.src('src/**')
.pipe(plumber())
.pipe(babel({ 
	presets: [require('babel-preset-es2015')], 
	plugins: [require.resolve('babel-plugin-es6-promise'), require.resolve('babel-plugin-transform-remove-strict-mode')]
}))
.pipe(plumber.stop())
.pipe(gulp.dest('dist')));


gulp.task('clean-js', () => del('dist/*.*', { force: true }));
