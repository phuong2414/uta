var spa = require('spa'),
	slidePopup = require('slideshow-popup');

Object.defineProperties(exports, {
	main: {
		get: function(){
			return getChapter().main
		}
	},
	local: {
		get: function(){
			return getChapter().local
		}
	}
});

function getChapter(){
	return spa.current ? getSPAChapter() : getMPAChapter()
}

function getSPAChapter(){
	var popupViews = spa.popupViews,
		local, main;

	main = spa.current.chapter;
	local = getLocalChapter() || main;

	if(popupViews.length){
		local = {
			id: popupViews[popupViews.length - 1].chapter,
			name: "Collected Popup " + spa.collectedPopupsCount,
			content: popupViews[popupViews.length - 1].slides
		};
	}

	return {main: main, local: local};
}

function getMPAChapter(){
	var utils = require('utils'),
		structure = require('structure'),
		slide = require('slide').sid,
		main = {
			id: null,
			name: null,
			content: []
		};

	utils.mapToArray(structure.chapters).some(function(chapter){
		return chapter.content.indexOf(slide) > -1 && (main = chapter);
	});

	return {
		main: main,
		local: getLocalChapter() || main
	};
}

function getLocalChapter(){
	if(slidePopup.isPopup()){
		return slidePopup.getCurrentPopupChapter();
	}
}