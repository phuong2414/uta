// Если чаптера нету в structure.storyboard, на него все равно можно перейти - это нужно как минимум для визарда
var structure = require('structure'),
	utils = require('utils');

function validate(options){
	if(options.slide){
		validateSlide(options.slide);
	}

	if(options.chapter){
		validateChapter(options.chapter);
	}

	if(options.chapter && options.slide){
		validateSlideInChapter(options.chapter, options.slide);
	}

	complete(options);
}

function validateSlide(slide){
	if(!utils.contains(structure.slides, slide)){
		throw new Error("Slide \"" + slide + "\" is not described.");
	}
}

function validateChapter(chapter){
	if(!utils.contains(structure.chapters, chapter)){
		throw new Error("There is no \"" + chapter + "\" chapter.");
	}
}

function validateSlideInChapter(chapter, slide){
	if(!utils.contains(structure.chapters[chapter].content, slide)){
		throw new Error("There is no slide \"" + slide + "\" in chapter \"" + chapter + '\".');
	}
}

function complete(options){
	if(!options.chapter){
		options.chapter = getChapterBySlideId(options.slide);
	}

	if(!options.slide){
		options.slide = structure.chapters[options.chapter].content[0];
	}
}

function getChapterBySlideId(slideId){
	var slideShowPopup = require('slideshow-popup'),
		chapterId = findChapterId(slideId, slideShowPopup.chapters) || findChapterId(slideId, utils.mapToArray(structure.chapters));

	if(!chapterId){
		throw new Error("Any chapter contains slide \"" + slideId);
	}

	return chapterId;
}

function findChapterId(slideId, chapters){
	var chapterId;

	chapters.some(function(chapter){
		return ~chapter.content.indexOf(slideId) && (chapterId = chapter.id)
	});

	return chapterId;
}

function setAnimation(options, current){
	options.animation = !(options.noTransition || !isCurrChapter(current.chapter, options.chapter));

	if(!current.isPopup){
		options.direction = getDirection(options, current);
	}
}

function getDirection(options, current){
	var currSlide = current.slides.indexOf(current.slide),
		targetSlide = current.slides.indexOf(options.slide),
		chapters = structure.storyboard,
		currChapter = chapters.indexOf(current.chapter),
		targetChapter = chapters.indexOf(options.chapter);

	if(isCurrChapter(current.chapter, options.chapter)){
		return targetSlide - currSlide;
	}else{
		return targetChapter - currChapter;
	}
}

function isCurrChapter(current, target){
	return current === target;
}

module.exports.validate = validate;
module.exports.setAnimation = setAnimation;