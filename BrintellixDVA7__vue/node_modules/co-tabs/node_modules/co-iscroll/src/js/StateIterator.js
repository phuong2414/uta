export default class StateIterator {
  constructor(scroller) {
    const {
      maxScrollY, maxScrollX,
      wrapperHeight, wrapperWidth,
    } = scroller;

    this.x = 0;
    this.y = 0;
    this.maxScrollY = maxScrollY;
    this.maxScrollX = maxScrollX;
    this.stepY = wrapperHeight;
    this.stepX = wrapperWidth;
  }

  next() {
    if (this.hasScroll()) {
      if (this.hasScrollX()) {
        this.x = this.nextX();
        return this.resolveValue();
      } else {
        this.x = 0;
      }

      this.y = this.nextY();
      return this.resolveValue();
    }

    return this.done();
  }

  hasScroll() {
    return this.hasScrollX() || this.hasScrollY();
  }

  hasScrollX() {
    return this.x > this.maxScrollX;
  }

  hasScrollY() {
    return this.y > this.maxScrollY;
  }

  nextX() {
    return Math.max(this.x - this.stepX, this.maxScrollX);
  }

  nextY() {
    return Math.max(this.y - this.stepY, this.maxScrollY);
  }

  resolveValue() {
    const { x, y } = this;
    return Promise.resolve({
      done: false,
      value: { x, y }
    });
  }

  done() {
    return Promise.resolve({ done: true, value: undefined });
  }
}
