var utils = require('utils'),
	filterStructure = require('./src/filter-structure.js'),
	addThumbnailPath = require('./src/add-thumbnail-path.js'),
	loadStructure = require('./src/load-structure.js'),
	params = require('params'),
	loader = require('loader'),
	presentationIdentifier = require('presentation-identifier'),
	storageKey = presentationIdentifier + 'Structure';

function Structure(){
	utils.Observer.call(this);

	this.loadJSONStructure();

	this.loadStorageStructure();
	this.subscribe('update', this.save.bind(this));
}

utils.inherits(Structure, utils.Observer);

Structure.prototype.loadJSONStructure = function(){
	if(params.structure || params.callNumber || params.division){
		utils.mixin(this, filterStructure(addThumbnailPath(loadStructure())));
	}else{
		utils.mixin(this, filterStructure(addThumbnailPath(loader.loadJSONSync('structure.json'))));
	}
};

Structure.prototype.save = function(){
	sessionStorage.setItem(storageKey, JSON.stringify(this));
};

Structure.prototype.loadStorageStructure = function(){
	var savedStructure = JSON.parse(sessionStorage.getItem(storageKey)) || {},
		props = Object.keys(savedStructure).filter(function(key){ return key !== 'listeners' });

	utils.mixin(this, savedStructure, props);
};

module.exports = new Structure();