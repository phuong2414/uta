import * as utils from 'utils';
import * as selectUtils from './utils.js';

exports.init = function(){
	allOptionOff(this.options);
	if(~this.index){
		this._refresh('index');
	}else if(this.selected){
		this._refresh('selected');
	}
};

function allOptionOff(options){
	options.forEach(function(elem){
		elem.unselect();
	})
}
exports.optionsRefresh = function(selected, options, addedOption, removedOption, currentActiveIndex){

	if(addedOption){
		addedOption.model.unselect();
		if(this.index > -1 && this.options.indexOf(addedOption.model) <= this.index){
			this.index++;
		}
	}else if(this.index > -1 && currentActiveIndex > -1 && currentActiveIndex === this.index){
		this.index = this.lastIndex = -1;
		this.selected = '';
	}
};

exports.onOptionTap = function(event){
	let option = event.detail;
	this.tap = true;

	if(!option.selected){
		option.select();
	}
};

exports.onOptionChange = function(event){
	let option = event.detail,
		index = this.options.indexOf(option);

	if(!this.tap){
		if(this.index == index){
			this.index = this.lastIndex = -1;
			this.selected = '';
		}
	}

	if(this.lastIndex != index && !this.options[index].model.selected){
		this.lastIndex = this.index;
		this.index = index;
	}

	this.tap = false;
	event.stopPropagation();
};

exports._refresh = function(attrName){
	switch(attrName){
		case 'index':
		{
			this.unselectLastActive(this.lastIndex);
			this.selectNewItemByIndex(this.index);
			break;
		}
		case 'selected':
		{
			if(this.index >= 0 && this.index < this.options.length && this.options[this.index].value == this.selected){
				return;
			}else{
				let newOptionSelected = this.getOptionByValue(this.selected);
				this.index = this.options.indexOf(newOptionSelected);
			}
			break;
		}
	}
};

exports.unselectLastActive = function(){
	if(this.lastIndex > -1 && this.options[this.lastIndex]){
		this.options[this.lastIndex].unselect();
	}
};

exports.selectNewItemByIndex = function(index){
	if(index > -1 && index < this.options.length){
		this.options[index].select();
		this.selected = this.options[index].value;
		this.dispatchEvent('change', {detail: this.selected});

		this.lastIndex = index;
	}else{
		this.lastIndex = -1;
	}
};

